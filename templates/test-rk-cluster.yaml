apiVersion: v1
kind: Namespace
metadata:
  name: example-rke2
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    ccm: external
    cluster-api.cattle.io/rancher-auto-import: "true"
    cni: external
    csi: external
  name: test-rk
  namespace: example-rke2
spec:
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
    kind: RKE2ControlPlane
    name: test-rk-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: HarvesterCluster
    name: test-rk-hv
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterCluster
metadata:
  name: test-rk-hv
  namespace: example-rke2
spec:
  identitySecret:
    name: hv-identity-secret
    namespace: example-rke2
  loadBalancerConfig:
    ipPoolRef: pool-1
    ipamType: pool
    listeners:
    - backendPort: 9345
      name: rke2-server
      port: 9345
      protocol: TCP
  server: https://145.40.93.207:6443
  targetNamespace: default
---
apiVersion: v1
data:
  kubeconfig: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKbGFrTkRRVklyWjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVd0TlUwbDNTVUZaUkZaUlVVUkVRbXg1WVRKVmVVeFlUbXdLWTI1YWJHTnBNV3BaVlVGNFRucEZORTU2YXpOUFJHc3dUVUkwV0VSVVNUQk5SRmw0VDFSRmVFNVVSWHBPUm05WVJGUk5NRTFFV1hoT2VrVjRUbFJGZWdwT1JtOTNTa1JGYVUxRFFVZEJNVlZGUVhkM1dtTnRkR3hOYVRGNldsaEtNbHBZU1hSWk1rWkJUVlJqZUU5RVl6Vk9lbWMxVGtSQ1drMUNUVWRDZVhGSENsTk5ORGxCWjBWSFEwTnhSMU5OTkRsQmQwVklRVEJKUVVKRmFsbHNlVTlCT1ZCRlpYcFhOMHB3Yld3eVZHWkdlbTE1UjJ0eVMwZ3hia3hUY2t4U2JHNEtNa05zZUZablUxbEJWakowUWprdldrODBhRGxGWW5oVmFtMTRkWGQxYW5jNFZEQndiVWRpU1hwQldIaFVRVFpxVVdwQ1FVMUJORWRCTVZWa1JIZEZRZ292ZDFGRlFYZEpRM0JFUVZCQ1owNVdTRkpOUWtGbU9FVkNWRUZFUVZGSUwwMUNNRWRCTVZWa1JHZFJWMEpDVWsxT1JuUlpPWEp2Vm1kWFdIcGtOUzgxQ205S1UzRkhaMDVWU25wQlMwSm5aM0ZvYTJwUFVGRlJSRUZuVGtwQlJFSkhRV2xGUVhrd2RERlVTMVZaU2tjMkx6UkdaR1U0TlZGblVWazBNVVV5YXpZS1ZGTnlRbmhUTXpKT1NFRlRURTVyUTBsUlEyNVFaa2RTYmtkTldXRTBUM2xsYVRJMFpVZHRMMGhvTm1wWk4zWmhPVkEzZERKd2RGRlVURGRrUW1jOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIHNlcnZlcjogaHR0cHM6Ly8xNDUuNDAuOTMuMjA3OjY0NDMKICBuYW1lOiBkZWZhdWx0CmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBkZWZhdWx0CiAgICB1c2VyOiBkZWZhdWx0CiAgbmFtZTogZGVmYXVsdApjdXJyZW50LWNvbnRleHQ6IGRlZmF1bHQKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBkZWZhdWx0CiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKcmVrTkRRVlJwWjBGM1NVSkJaMGxKV0N0SGJuZDNSblpQUzBGM1EyZFpTVXR2V2tsNmFqQkZRWGRKZDBwRVJXbE5RMEZIUVRGVlJVRjNkMW9LWTIxMGJFMXBNV3BpUjJ4c1ltNVJkRmt5UmtGTlZHTjRUMFJqTlU1Nlp6Vk9SRUZsUm5jd2VVNUVRVEpOVkd0NFRWUlZlRTE2VW1GR2R6QjVUbFJCTWdwTlZHdDRUVlJWZUUxNlVtRk5SRUY0Um5wQlZrSm5UbFpDUVc5VVJHNU9OV016VW14aVZIQjBXVmhPTUZwWVNucE5VbFYzUlhkWlJGWlJVVVJGZDNoNkNtVllUakJhVnpBMldWZFNkR0ZYTkhkWFZFRlVRbWRqY1docmFrOVFVVWxDUW1kbmNXaHJhazlRVVUxQ1FuZE9RMEZCVW5oeFlucFJNaXRFYzJoQloxTUtiRk5xTmtaSVRHVmlkVVE1WkZGSlJFbHlSREJtZGxsaGIxWkxNREZIU0N0cU5tTjJVU3N2WWtaTGFVTkdZMkZ0T1hBeFlrTjFZV3hUZGtoSU1VUllUZ3BwU2k5eWJrNXBjRzh3WjNkU2FrRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwSmhRWGRGZDFsRVZsSXdiRUpCZDNkRFoxbEpTM2RaUWtKUlZVaEJkMGwzQ2toM1dVUldVakJxUWtKbmQwWnZRVlZpYTBNMFRrdFRkMGMxUWt3eE1VUlFOalV6V1hKUE1uUTViVmwzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5SUVhjS1VtZEphRUZQYXpkdU9ETm1SbTVKUkRGM2JGQlVRVVl5VTBsM09EWjZiMjVpVFdKc01sSkdXV1o1VVRKWlpUWlRRV2xGUVd4a0szQndlbmhDWkU1Vk5BcDBTV3RoVldaSVkzbHJTbnB1YkRneUt6bHZURFprUTFSS1drMTVVekpCUFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2kwdExTMHRRa1ZIU1U0Z1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFwTlNVbENaVlJEUTBGU0syZEJkMGxDUVdkSlFrRkVRVXRDWjJkeGFHdHFUMUJSVVVSQmFrRnJUVk5KZDBsQldVUldVVkZFUkVKc2VXRXlWWGxNVjA1ekNtRlhWblZrUXpGcVdWVkJlRTU2UlRST2Vtc3pUMFJyTUUxQ05GaEVWRWt3VFVSWmVFOVVSWGhPVkVWNlRrWnZXRVJVVFRCTlJGbDRUbnBGZUU1VVJYb0tUa1p2ZDBwRVJXbE5RMEZIUVRGVlJVRjNkMXBqYlhSc1RXa3hhbUpIYkd4aWJsRjBXVEpHUVUxVVkzaFBSR00xVG5wbk5VNUVRbHBOUWsxSFFubHhSd3BUVFRRNVFXZEZSME5EY1VkVFRUUTVRWGRGU0VFd1NVRkNRa296ZHpWQlRYUjBWVWR0YTBaQloyMXNiV0ZPYTNvNGJUbGxNMko2TTFwYU0zRTVkR1ZHQ2pWVFEweHliWGREYUdwd1Z6ZFNibFJ2VjBKSE1sWkdSMHRwUkROTmFFVnRRVFkzZWs5VlJqSlJNa1pOWTJNcmFsRnFRa0ZOUVRSSFFURlZaRVIzUlVJS0wzZFJSVUYzU1VOd1JFRlFRbWRPVmtoU1RVSkJaamhGUWxSQlJFRlJTQzlOUWpCSFFURlZaRVJuVVZkQ1FsSjFVVXhuTUhCTVFXSnJSWFpZVlUwdmNncHVaR2x6TjJFek1scHFRVXRDWjJkeGFHdHFUMUJSVVVSQlowNUpRVVJDUmtGcFFsWjJkM0pOWm5wUk5qbDVhRlF2ZVZGWFlUQlhhV1ZWVmtONFdVeDNDamhZZDNsalNWSmxOVWhaV1hKblNXaEJURXdyTURWdmNVcDJNa3N6Y2tGS1VXbElkR2xLTjBjM2JuTklNM2RwU0RFdmNuVXdkUzltUW1JclVBb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCRlF5QlFVa2xXUVZSRklFdEZXUzB0TFMwdENrMUlZME5CVVVWRlNVdEtibEV5WkdKdlUzVkdka3haUnpReWVYQlhURXBIVmpOU01XVjFTMnBDTkUxRmJYaHRaRFZETlRKdlFXOUhRME54UjFOTk5Ea0tRWGRGU0c5VlVVUlJaMEZGWTJGdE9EQk9kbWMzU1ZGSlJYQlZieXRvVW5remJUZG5MMWhWUTBGNVMzYzVTRGN5UjNGR1UzUk9VbWd2Ynl0dVREQlFkZ295ZUZOdloyaFlSM0IyWVdSWGQzSnRjRlZ5ZUhnNVVURjZXV2xtTmpWNldYRlJQVDBLTFMwdExTMUZUa1FnUlVNZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo=
kind: Secret
metadata:
  name: hv-identity-secret
  namespace: example-rke2
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
kind: RKE2ControlPlane
metadata:
  name: test-rk-control-plane
  namespace: example-rke2
spec:
  agentConfig:
    version: v1.26.6+rke2r1
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: HarvesterMachineTemplate
    name: test-rk-cp-machine
    namespace: example-rke2
  replicas: 3
  serverConfig:
    cloudProviderName: external
    cni: calico
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
kind: RKE2ConfigTemplate
metadata:
  name: test-rk-worker
  namespace: example-rke2
spec:
  template:
    spec:
      agentConfig:
        version: v1.26.6+rke2r1
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: test-rk-workers
  namespace: example-rke2
spec:
  clusterName: test-rk
  replicas: 2
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: test-rk
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
          kind: RKE2ConfigTemplate
          name: test-rk-worker
          namespace: example-rke2
      clusterName: test-rk
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: HarvesterMachineTemplate
        name: test-rk-wk-machine
        namespace: example-rke2
      version: v1.26.6
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterMachineTemplate
metadata:
  name: test-rk-wk-machine
  namespace: example-rke2
spec:
  template:
    spec:
      cpu: 1
      memory: 4Gi
      networks:
      - harvester-public/vlan-1000
      sshKeyPair: default/macos
      sshUser: ubuntu
      volumes:
      - bootOrder: 0
        imageName: default/sles15sp5-default
        volumeSize: 20Gi
        volumeType: image
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterMachineTemplate
metadata:
  name: test-rk-cp-machine
  namespace: example-rke2
spec:
  template:
    spec:
      cpu: 2
      memory: 8Gi
      networks:
      - harvester-public/vlan-1000
      sshKeyPair: default/macos
      sshUser: ubuntu
      volumes:
      - bootOrder: 0
        imageName: default/sles15sp5-default
        volumeSize: 20Gi
        volumeType: image
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-harvester-ccm
  namespace: example-rke2
spec:
  clusterSelector:
    matchLabels:
      ccm: external
  resources:
  - kind: ConfigMap
    name: cloud-controller-manager-addon
  strategy: Reconcile
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-harvester-csi
  namespace: example-rke2
spec:
  clusterSelector:
    matchLabels:
      csi: external
  resources:
  - kind: ConfigMap
    name: harvester-csi-driver-addon
  strategy: Reconcile
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-calico-chart-config
  namespace: example-rke2
spec:
  clusterSelector:
    matchLabels:
      cni: external
  resources:
  - kind: ConfigMap
    name: calico-helm-config
  strategy: Reconcile
---
apiVersion: v1
data:
  harvester-csi-deployment.yaml: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: harvester-csi-plugin
      namespace: kube-system
    spec:
      selector:
        matchLabels:
          app: harvester-csi-plugin
      template:
        metadata:
          labels:
            app: harvester-csi-plugin
        spec:
          containers:
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --kubelet-registration-path=/var/lib/kubelet/harvester-plugins/driver.harvesterhci.io/csi.sock
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              image: longhornio/csi-node-driver-registrar:v1.2.0-lh1
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - rm -rf /registration/driver.harvesterhci.io-reg.sock
                        /csi//*
              name: node-driver-registrar
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
                - mountPath: /registration
                  name: registration-dir
            - args:
                - --nodeid=$(NODE_ID)
                - --endpoint=$(CSI_ENDPOINT)
                - --kubeconfig=/etc/csi/cloud-config
              env:
                - name: NODE_ID
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
              image: rancher/harvester-csi-driver:v0.1.6
              imagePullPolicy: Always
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - rm -f /csi//*
              name: harvester-csi-plugin
              securityContext:
                allowPrivilegeEscalation: true
                capabilities:
                  add:
                    - SYS_ADMIN
                privileged: true
              volumeMounts:
                - name: cloud-config
                  mountPath: "/etc/csi"
                  readOnly: true
                - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
                  mountPropagation: Bidirectional
                  name: kubernetes-csi-dir
                - mountPath: /csi/
                  name: socket-dir
                - mountPath: /var/lib/kubelet/pods
                  mountPropagation: Bidirectional
                  name: pods-mount-dir
                - mountPath: /dev
                  name: host-dev
                - mountPath: /sys
                  name: host-sys
                - mountPath: /rootfs
                  mountPropagation: Bidirectional
                  name: host
                - mountPath: /lib/modules
                  name: lib-modules
                  readOnly: true
          hostPID: true
          serviceAccountName: harvester-csi
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
            - effect: NoSchedule
              key: kubevirt.io/drain
              operator: Exists
          volumes:
            - name: cloud-config
              secret:
                secretName: cloud-config
            - hostPath:
                path: /var/lib/kubelet/plugins/kubernetes.io/csi
                type: DirectoryOrCreate
              name: kubernetes-csi-dir
            - hostPath:
                path: /var/lib/kubelet/plugins_registry
                type: Directory
              name: registration-dir
            - hostPath:
                path: /var/lib/kubelet/harvester-plugins/driver.harvesterhci.io
                type: DirectoryOrCreate
              name: socket-dir
            - hostPath:
                path: /var/lib/kubelet/pods
                type: DirectoryOrCreate
              name: pods-mount-dir
            - hostPath:
                path: /dev
              name: host-dev
            - hostPath:
                path: /sys
              name: host-sys
            - hostPath:
                path: /
              name: host
            - hostPath:
                path: /lib/modules
              name: lib-modules
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: harvester-csi
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: harvester-csi
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
      - kind: ServiceAccount
        name: harvester-csi
        namespace: kube-system
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: csi-controller
      namespace: kube-system
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: csi-controller
      template:
        metadata:
          labels:
            app: csi-controller
        spec:
          containers:
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --csiTimeout=2m5s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-resizer:v0.5.1-lh1
              name: csi-resizer
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --timeout=2m5s
                - --enable-leader-election
                - --leader-election-type=leases
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-provisioner:v1.6.0-lh1
              name: csi-provisioner
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --timeout=2m5s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-attacher:v2.2.1-lh1
              name: csi-attacher
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
          serviceAccountName: harvester-csi
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
            - effect: NoSchedule
              key: kubevirt.io/drain
              operator: Exists
          volumes:
            - hostPath:
                path: /var/lib/kubelet/harvester-plugins/driver.harvesterhci.io
                type: DirectoryOrCreate
              name: socket-dir
    ---
    apiVersion: storage.k8s.io/v1
    kind: CSIDriver
    metadata:
      name: driver.harvesterhci.io
    spec:
      attachRequired: true
      fsGroupPolicy: ReadWriteOnceWithFSType
      podInfoOnMount: true
      volumeLifecycleModes:
        - Persistent
    ---
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: harvester
    allowVolumeExpansion: true
    provisioner: driver.harvesterhci.io
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
kind: ConfigMap
metadata:
  name: cloud-controller-manager-addon
  namespace: example-rke2
---
apiVersion: v1
data:
  harvester-cloud-provider-deploy.yaml: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n
    \ labels:\n    app.kubernetes.io/component: cloud-provider\n    app.kubernetes.io/name:
    harvester-cloud-provider\n  name: harvester-cloud-provider\n  namespace: kube-system\nspec:\n
    \ replicas: 2\n  selector:\n    matchLabels:\n      app.kubernetes.io/component:
    cloud-provider\n      app.kubernetes.io/name: harvester-cloud-provider\n  template:\n
    \   metadata:\n      labels:\n        app.kubernetes.io/component: cloud-provider\n
    \       app.kubernetes.io/name: harvester-cloud-provider\n    spec:\n      containers:\n
    \     - args:\n        - --cloud-config=/etc/kubernetes/cloud-config\n        command:\n
    \       - harvester-cloud-provider\n        image: rancher/harvester-cloud-provider:v0.2.0\n
    \       imagePullPolicy: Always\n        name: harvester-cloud-provider\n        resources:
    {}\n        volumeMounts:\n        - mountPath: /etc/kubernetes\n          name:
    cloud-config\n      serviceAccountName: harvester-cloud-controller-manager\n      tolerations:\n
    \     - effect: NoSchedule\n        key: node-role.kubernetes.io/control-plane\n
    \       operator: Exists\n      - effect: NoSchedule\n        key: node.cloudprovider.kubernetes.io/uninitialized\n
    \       operator: Equal\n        value: \"true\"\n      volumes:\n        - name:
    cloud-config\n          secret:\n            secretName: cloud-config\n---\napiVersion:
    v1\nkind: ServiceAccount\nmetadata:\n  name: harvester-cloud-controller-manager\n
    \ namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind:
    ClusterRole\nmetadata:\n  name: harvester-cloud-controller-manager\nrules:\n-
    apiGroups:\n  - \"\"\n  resources:\n  - services\n  - nodes\n  - events\n  verbs:\n
    \ - get\n  - list\n  - watch\n  - create\n  - update\n  - patch\n- apiGroups:\n
    \ - \"\"\n  resources:\n  - services/status\n  verbs:\n  - update\n  - patch\n-
    apiGroups:\n  - \"\"\n  resources:\n  - nodes/status\n  verbs:\n  - patch\n  -
    update\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n
    \ - get\n  - create\n  - update\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n
    \ name: harvester-cloud-controller-manager\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n
    \ kind: ClusterRole\n  name: harvester-cloud-controller-manager\nsubjects:\n  -
    kind: ServiceAccount\n    name: harvester-cloud-controller-manager\n    namespace:
    kube-system\n---\napiVersion: v1\ndata:\n  cloud-config: \nkind: Secret\nmetadata:\n
    \ creationTimestamp: null\n  name: cloud-config\n  namespace: kube-system\n"
kind: ConfigMap
metadata:
  name: harvester-csi-driver-addon
  namespace: example-rke2
---
apiVersion: v1
data:
  calico-helm-config.yaml: |
    apiVersion: helm.cattle.io/v1
    kind: HelmChartConfig
    metadata:
      name: rke2-calico
      namespace: kube-system
    spec:
      valuesContent: |-
        installation:
          controlPlaneTolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: Exists
              effect: NoSchedule
            - key: "node-role.kubernetes.io/etcd"
              operator: Exists
              effect: NoExecute
            - key: "node.cloudprovider.kubernetes.io/uninitialized"
              operator: Equal
              value: "true"
              effect: NoSchedule
kind: ConfigMap
metadata:
  name: calico-helm-config
  namespace: example-rke2
