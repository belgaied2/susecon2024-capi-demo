apiVersion: v1
kind: Namespace
metadata:
  name: example-rke2
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    ccm: external
    cni: external
    csi: external
  name: test-rk
  namespace: example-rke2
spec:
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
    kind: RKE2ControlPlane
    name: test-rk-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: HarvesterCluster
    name: test-rk-hv
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterCluster
metadata:
  name: test-rk-hv
  namespace: example-rke2
spec:
  identitySecret:
    name: hv-identity-secret
    namespace: example-rke2
  loadBalancerConfig:
    ipamType: dhcp
    listeners:
    - backendPort: 9345
      name: rke2-server
      port: 9345
      protocol: TCP
  server: https://147.28.185.89:6443
  targetNamespace: default
---
apiVersion: v1
data:
  kubeconfig: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKbGFrTkRRVklyWjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVd0TlUwbDNTVUZaUkZaUlVVUkVRbXg1WVRKVmVVeFlUbXdLWTI1YWJHTnBNV3BaVlVGNFRucEZNMDVxWTNkUFJHZDNUVUkwV0VSVVNUQk5SRmwzVG1wRmQwNUVaM2ROUm05WVJGUk5NRTFFV1hkT1JFVjNUa1JuZHdwTlJtOTNTa1JGYVUxRFFVZEJNVlZGUVhkM1dtTnRkR3hOYVRGNldsaEtNbHBZU1hSWk1rWkJUVlJqZUU1NldUTk5SR2MwVFVSQ1drMUNUVWRDZVhGSENsTk5ORGxCWjBWSFEwTnhSMU5OTkRsQmQwVklRVEJKUVVKUE0wTjRjbTVVYWs5Q1VrRjNUbUZCTkV0TlVqQXZObWR3UmxVNU1rZEJSbUZ0YURGS1ZGUUtha1J2ZHpJcmNWVnJkRVJ4VGpoVE9VSXpTRGR3YVhaNE1IRmtibGh3UzNoU01USXlOelpMVmtSNk9HTlpTVU5xVVdwQ1FVMUJORWRCTVZWa1JIZEZRZ292ZDFGRlFYZEpRM0JFUVZCQ1owNVdTRkpOUWtGbU9FVkNWRUZFUVZGSUwwMUNNRWRCTVZWa1JHZFJWMEpDVVRKbVdYRkxXbWhoVlRSeFJVUmtNekpDQ2s1TGJXYzJWREJvY2tSQlMwSm5aM0ZvYTJwUFVGRlJSRUZuVGtwQlJFSkhRV2xGUVhWRFlqaDRhRlYzTW5FMWFGTnpjMWRpYkVsaE5XUkZiRUV5UTJ3S2RsTnVWVTlVTVRkeGNtdDJLME5yUTBsUlJFMDBka2RLWVVsRU1EaDBPQzk1T0RCdmNHZHFRMWR4VVdobVkzYzRNalpsYjJ0UUwxSmFWMDFWVEhjOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIHNlcnZlcjogaHR0cHM6Ly8xNDcuMjguMTg1Ljg5OjY0NDMKICBuYW1lOiBkZWZhdWx0CmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBkZWZhdWx0CiAgICB1c2VyOiBkZWZhdWx0CiAgbmFtZTogZGVmYXVsdApjdXJyZW50LWNvbnRleHQ6IGRlZmF1bHQKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBkZWZhdWx0CiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKcmFrTkRRVlJwWjBGM1NVSkJaMGxKU2s5VGJYRkhaeXRMUjBWM1EyZFpTVXR2V2tsNmFqQkZRWGRKZDBwRVJXbE5RMEZIUVRGVlJVRjNkMW9LWTIxMGJFMXBNV3BpUjJ4c1ltNVJkRmt5UmtGTlZHTjRUbnBaTTAxRVp6Uk5SRUZsUm5jd2VVNUVRVEpOUkZsNFRVUlJORTFFUW1GR2R6QjVUbFJCTWdwTlJGbDRUVVJSTkUxRVFtRk5SRUY0Um5wQlZrSm5UbFpDUVc5VVJHNU9OV016VW14aVZIQjBXVmhPTUZwWVNucE5VbFYzUlhkWlJGWlJVVVJGZDNoNkNtVllUakJhVnpBMldWZFNkR0ZYTkhkWFZFRlVRbWRqY1docmFrOVFVVWxDUW1kbmNXaHJhazlRVVUxQ1FuZE9RMEZCVW5VemVqQndVVXg2Y1hka1JtMEtNV0U0TW01VFdGWlZXRWN3ZVZseE5pdDZZa05PUm5CbksxRnRZV3hUYTFCQk1VMDJOVlpyVmxONGRYazVURzkzU3pFd1UyOUpSa1IzU0hwa2JGbHBNUW9yVmpKSU5GZDZRVzh3WjNkU2FrRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwSmhRWGRGZDFsRVZsSXdiRUpCZDNkRFoxbEpTM2RaUWtKUlZVaEJkMGwzQ2toM1dVUldVakJxUWtKbmQwWnZRVlZET1ZJMFdUSnJkRWxTVERoQmJFTldMMk0yY21WRGNuQjFlVGgzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhjS1VsRkphRUZNZWxGNFJsVXhSRkJRVnpOSFpXcFpaVlZUUlRSUWRsZGlUVGR0ZDJReVYwOUxWMHgzVUN0cVdtaHRRV2xDTVVkd1lWaG1LMW80WlhaNVl3cG1TbVZGYXpkcmVraEhRM0pEUlcxRlZWVlJha0l4ZVVoRWRrbHRSM2M5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2kwdExTMHRRa1ZIU1U0Z1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFwTlNVbENaVVJEUTBGU0syZEJkMGxDUVdkSlFrRkVRVXRDWjJkeGFHdHFUMUJSVVVSQmFrRnJUVk5KZDBsQldVUldVVkZFUkVKc2VXRXlWWGxNVjA1ekNtRlhWblZrUXpGcVdWVkJlRTU2UlROT2FtTjNUMFJuZDAxQ05GaEVWRWt3VFVSWmQwNXFSWGRPUkdkM1RVWnZXRVJVVFRCTlJGbDNUa1JGZDA1RVozY0tUVVp2ZDBwRVJXbE5RMEZIUVRGVlJVRjNkMXBqYlhSc1RXa3hhbUpIYkd4aWJsRjBXVEpHUVUxVVkzaE9lbGt6VFVSbk5FMUVRbHBOUWsxSFFubHhSd3BUVFRRNVFXZEZSME5EY1VkVFRUUTVRWGRGU0VFd1NVRkNUMVoyWVV3eFUwRlhSR2xsWlV0UFQxbEJia0pIVFZOMU9EZElUMnBIV0VFeVNHZHVjRlJKQ20xYVNVRllPSGRVWTFOV1ZFcHdkMlZaYlV0VmFFTnVWMHBhVFdjcmFGRTJiVVZIZFRCSVpISXZVWHB2UmpSdGFsRnFRa0ZOUVRSSFFURlZaRVIzUlVJS0wzZFJSVUYzU1VOd1JFRlFRbWRPVmtoU1RVSkJaamhGUWxSQlJFRlJTQzlOUWpCSFFURlZaRVJuVVZkQ1FsRk1NVWhvYW1GVE1HaEZkbmREVlVwWU9RcDZjWFEwUzNWdE4weDZRVXRDWjJkeGFHdHFUMUJSVVVSQlowNUlRVVJDUlVGcFFtcDVWVVJhTTJKTk9WVlBMMWxIWVVOcVdETlhja3RaZGtJMWNEZFlDbFY0TlUxelZXUnZNSGx5TmtwM1NXZEJTMk40VUVZeWVscHhLMHRsY1VKeVVrSjFWVEpUU2twUk5HdDRjelI1VDBsaGFVdFpOR3h4YWsxVlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCRlF5QlFVa2xXUVZSRklFdEZXUzB0TFMwdENrMUlZME5CVVVWRlNVOTVRbWRpUW1Nd04wZHlkVkJ2WTJwVlZrMWFaM2RsYUZSTmRucERabkpIYmsxdmJHOUJialpSY0dWdlFXOUhRME54UjFOTk5Ea0tRWGRGU0c5VlVVUlJaMEZGWW5RNE9VdFZRemcyYzBoU1duUlhkazV3TUd3eFZrWjRkRTF0UzNWMmN6SjNhbEpoV1ZCclNtMXdWWEJFZDA1VVQzVldXZ3BHVlhOaWMzWlROazFEZEdSRmNVTkNVVGhDT0ROYVYwbDBabXhrYUN0R2MzZEJQVDBLTFMwdExTMUZUa1FnUlVNZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo=
kind: Secret
metadata:
  name: hv-identity-secret
  namespace: example-rke2
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
kind: RKE2ControlPlane
metadata:
  name: test-rk-control-plane
  namespace: example-rke2
spec:
  agentConfig:
    version: v1.26.6+rke2r1
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: HarvesterMachineTemplate
    name: test-rk-cp-machine
    namespace: example-rke2
  replicas: 3
  serverConfig:
    cloudProviderName: external
    cni: calico
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
kind: RKE2ConfigTemplate
metadata:
  name: test-rk-worker
  namespace: example-rke2
spec:
  template:
    spec:
      agentConfig:
        version: v1.26.6+rke2r1
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: test-rk-workers
  namespace: example-rke2
spec:
  clusterName: test-rk
  replicas: 2
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: test-rk
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
          kind: RKE2ConfigTemplate
          name: test-rk-worker
          namespace: example-rke2
      clusterName: test-rk
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: HarvesterMachineTemplate
        name: test-rk-wk-machine
        namespace: example-rke2
      version: v1.26.6
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterMachineTemplate
metadata:
  name: test-rk-wk-machine
  namespace: example-rke2
spec:
  template:
    spec:
      cpu: 1
      memory: 4Gi
      networks:
      - harvester-public/vlan-1
      sshKeyPair: default/macos
      sshUser: ubuntu
      volumes:
      - bootOrder: 0
        imageName: default/sles15sp5-default
        volumeSize: 50Gi
        volumeType: image
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterMachineTemplate
metadata:
  name: test-rk-cp-machine
  namespace: example-rke2
spec:
  template:
    spec:
      cpu: 2
      memory: 8Gi
      networks:
      - harvester-public/vlan-1
      sshKeyPair: default/macos
      sshUser: ubuntu
      volumes:
      - bootOrder: 0
        imageName: default/sles15sp5-default
        volumeSize: 50Gi
        volumeType: image
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-harvester-ccm
  namespace: example-rke2
spec:
  clusterSelector:
    matchLabels:
      ccm: external
  resources:
  - kind: ConfigMap
    name: cloud-controller-manager-addon
  strategy: ApplyOnce
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-harvester-csi
  namespace: example-rke2
spec:
  clusterSelector:
    matchLabels:
      csi: external
  resources:
  - kind: ConfigMap
    name: harvester-csi-driver-addon
  strategy: ApplyOnce
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-calico-chart-config
  namespace: example-rke2
spec:
  clusterSelector:
    matchLabels:
      cni: external
  resources:
  - kind: ConfigMap
    name: calico-helm-config
  strategy: ApplyOnce
---
apiVersion: v1
data:
  harvester-csi-deployment.yaml: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: harvester-csi-plugin
      namespace: kube-system
    spec:
      selector:
        matchLabels:
          app: harvester-csi-plugin
      template:
        metadata:
          labels:
            app: harvester-csi-plugin
        spec:
          containers:
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --kubelet-registration-path=/var/lib/kubelet/harvester-plugins/driver.harvesterhci.io/csi.sock
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              image: longhornio/csi-node-driver-registrar:v1.2.0-lh1
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - rm -rf /registration/driver.harvesterhci.io-reg.sock
                        /csi//*
              name: node-driver-registrar
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
                - mountPath: /registration
                  name: registration-dir
            - args:
                - --nodeid=$(NODE_ID)
                - --endpoint=$(CSI_ENDPOINT)
                - --kubeconfig=/etc/csi/cloud-config
              env:
                - name: NODE_ID
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
              image: rancher/harvester-csi-driver:v0.1.6
              imagePullPolicy: Always
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - rm -f /csi//*
              name: harvester-csi-plugin
              securityContext:
                allowPrivilegeEscalation: true
                capabilities:
                  add:
                    - SYS_ADMIN
                privileged: true
              volumeMounts:
                - name: cloud-config
                  mountPath: "/etc/csi"
                  readOnly: true
                - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
                  mountPropagation: Bidirectional
                  name: kubernetes-csi-dir
                - mountPath: /csi/
                  name: socket-dir
                - mountPath: /var/lib/kubelet/pods
                  mountPropagation: Bidirectional
                  name: pods-mount-dir
                - mountPath: /dev
                  name: host-dev
                - mountPath: /sys
                  name: host-sys
                - mountPath: /rootfs
                  mountPropagation: Bidirectional
                  name: host
                - mountPath: /lib/modules
                  name: lib-modules
                  readOnly: true
          hostPID: true
          serviceAccountName: harvester-csi
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
            - effect: NoSchedule
              key: kubevirt.io/drain
              operator: Exists
          volumes:
            - name: cloud-config
              secret:
                secretName: cloud-config
            - hostPath:
                path: /var/lib/kubelet/plugins/kubernetes.io/csi
                type: DirectoryOrCreate
              name: kubernetes-csi-dir
            - hostPath:
                path: /var/lib/kubelet/plugins_registry
                type: Directory
              name: registration-dir
            - hostPath:
                path: /var/lib/kubelet/harvester-plugins/driver.harvesterhci.io
                type: DirectoryOrCreate
              name: socket-dir
            - hostPath:
                path: /var/lib/kubelet/pods
                type: DirectoryOrCreate
              name: pods-mount-dir
            - hostPath:
                path: /dev
              name: host-dev
            - hostPath:
                path: /sys
              name: host-sys
            - hostPath:
                path: /
              name: host
            - hostPath:
                path: /lib/modules
              name: lib-modules
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: harvester-csi
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: harvester-csi
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
      - kind: ServiceAccount
        name: harvester-csi
        namespace: kube-system
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: csi-controller
      namespace: kube-system
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: csi-controller
      template:
        metadata:
          labels:
            app: csi-controller
        spec:
          containers:
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --csiTimeout=2m5s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-resizer:v0.5.1-lh1
              name: csi-resizer
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --timeout=2m5s
                - --enable-leader-election
                - --leader-election-type=leases
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-provisioner:v1.6.0-lh1
              name: csi-provisioner
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --timeout=2m5s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-attacher:v2.2.1-lh1
              name: csi-attacher
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
          serviceAccountName: harvester-csi
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
            - effect: NoSchedule
              key: kubevirt.io/drain
              operator: Exists
          volumes:
            - hostPath:
                path: /var/lib/kubelet/harvester-plugins/driver.harvesterhci.io
                type: DirectoryOrCreate
              name: socket-dir
    ---
    apiVersion: storage.k8s.io/v1
    kind: CSIDriver
    metadata:
      name: driver.harvesterhci.io
    spec:
      attachRequired: true
      fsGroupPolicy: ReadWriteOnceWithFSType
      podInfoOnMount: true
      volumeLifecycleModes:
        - Persistent
    ---
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: harvester
    allowVolumeExpansion: true
    provisioner: driver.harvesterhci.io
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
kind: ConfigMap
metadata:
  name: cloud-controller-manager-addon
  namespace: example-rke2
---
apiVersion: v1
data:
  harvester-cloud-provider-deploy.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: cloud-provider
        app.kubernetes.io/name: harvester-cloud-provider
      name: harvester-cloud-provider
      namespace: kube-system
    spec:
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: cloud-provider
          app.kubernetes.io/name: harvester-cloud-provider
      template:
        metadata:
          labels:
            app.kubernetes.io/component: cloud-provider
            app.kubernetes.io/name: harvester-cloud-provider
        spec:
          containers:
          - args:
            - --cloud-config=/etc/kubernetes/cloud-config
            command:
            - harvester-cloud-provider
            image: rancher/harvester-cloud-provider:v0.2.0
            imagePullPolicy: Always
            name: harvester-cloud-provider
            resources: {}
            volumeMounts:
            - mountPath: /etc/kubernetes
              name: cloud-config
          serviceAccountName: harvester-cloud-controller-manager
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          - effect: NoSchedule
            key: node.cloudprovider.kubernetes.io/uninitialized
            operator: Equal
            value: "true"
          volumes:
            - name: cloud-config
              secret:
                secretName: cloud-config
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: harvester-cloud-controller-manager
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: harvester-cloud-controller-manager
    rules:
    - apiGroups:
      - ""
      resources:
      - services
      - nodes
      - events
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
    - apiGroups:
      - ""
      resources:
      - services/status
      verbs:
      - update
      - patch
    - apiGroups:
      - ""
      resources:
      - nodes/status
      verbs:
      - patch
      - update
    - apiGroups:
      - coordination.k8s.io
      resources:
      - leases
      verbs:
      - get
      - create
      - update
    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: harvester-cloud-controller-manager
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: harvester-cloud-controller-manager
    subjects:
      - kind: ServiceAccount
        name: harvester-cloud-controller-manager
        namespace: kube-system

    ---
    apiVersion: v1
    data:
      cloud-config: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKbGFrTkRRVklyWjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVd0TlUwbDNTVUZaUkZaUlVVUkVRbXg1WVRKVmVVeFlUbXdLWTI1YWJHTnBNV3BaVlVGNFRucEZNMDVxWTNkUFJHZDNUVUkwV0VSVVNUQk5SRmwzVG1wRmQwNUVaM2ROUm05WVJGUk5NRTFFV1hkT1JFVjNUa1JuZHdwTlJtOTNTa1JGYVUxRFFVZEJNVlZGUVhkM1dtTnRkR3hOYVRGNldsaEtNbHBZU1hSWk1rWkJUVlJqZUU1NldUTk5SR2MwVFVSQ1drMUNUVWRDZVhGSENsTk5ORGxCWjBWSFEwTnhSMU5OTkRsQmQwVklRVEJKUVVKUE0wTjRjbTVVYWs5Q1VrRjNUbUZCTkV0TlVqQXZObWR3UmxVNU1rZEJSbUZ0YURGS1ZGUUtha1J2ZHpJcmNWVnJkRVJ4VGpoVE9VSXpTRGR3YVhaNE1IRmtibGh3UzNoU01USXlOelpMVmtSNk9HTlpTVU5xVVdwQ1FVMUJORWRCTVZWa1JIZEZRZ292ZDFGRlFYZEpRM0JFUVZCQ1owNVdTRkpOUWtGbU9FVkNWRUZFUVZGSUwwMUNNRWRCTVZWa1JHZFJWMEpDVVRKbVdYRkxXbWhoVlRSeFJVUmtNekpDQ2s1TGJXYzJWREJvY2tSQlMwSm5aM0ZvYTJwUFVGRlJSRUZuVGtwQlJFSkhRV2xGUVhWRFlqaDRhRlYzTW5FMWFGTnpjMWRpYkVsaE5XUkZiRUV5UTJ3S2RsTnVWVTlVTVRkeGNtdDJLME5yUTBsUlJFMDBka2RLWVVsRU1EaDBPQzk1T0RCdmNHZHFRMWR4VVdobVkzYzRNalpsYjJ0UUwxSmFWMDFWVEhjOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIHNlcnZlcjogaHR0cHM6Ly8xNDcuMjguMTg1Ljg5OjY0NDMKICBuYW1lOiBkZWZhdWx0CmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBkZWZhdWx0CiAgICBuYW1lc3BhY2U6IGRlZmF1bHQKICAgIHVzZXI6IGNsb3VkLXByb3ZpZGVyLWRlZmF1bHQtZGVmYXVsdAogIG5hbWU6IGNsb3VkLXByb3ZpZGVyLWRlZmF1bHQtZGVmYXVsdApjdXJyZW50LWNvbnRleHQ6IGNsb3VkLXByb3ZpZGVyLWRlZmF1bHQtZGVmYXVsdApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGNsb3VkLXByb3ZpZGVyLWRlZmF1bHQtZGVmYXVsdAogIHVzZXI6CiAgICB0b2tlbjogZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltUlpRV2xVUjNVeE1Fa3hPVEJvVVVaaVZuQkJPR1owVmtaa2NsZHhjMWxaUjJOVU1GOUpVMGxGV1RnaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbU5zYjNWa0xYQnliM1pwWkdWeUxYUnZhMlZ1SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW1Oc2IzVmtMWEJ5YjNacFpHVnlJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1ZFdsa0lqb2laV1poWVdaak1qTXRNalJoTmkwME4yWTBMV0ppTldRdE4yRTBZVFUwTUdGa05ESTBJaXdpYzNWaUlqb2ljM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwT21SbFptRjFiSFE2WTJ4dmRXUXRjSEp2ZG1sa1pYSWlmUS5TZDVMeEdpRzE2ZFBZSXFPQkQ1NjYzeVVUUUJZTENETnJnd3NWMnFkMjZJRjludUlkRTFCUmZQeGRmalhyR0xxR0NpaWRRRWVPdXM1TVNQZVltMVNnOWprdmc1a0NyMm5Uczdta0tPLUJLdFA2MGpEWEZTalRCZ2twV05xLWx0TGZIYldVbEdHeDA2dnZZMmFvLVRaQVVWYzR0aDBaYlNRVzdySUtUakYxNW1JOFN5aVNKaE1RM3pnUzJkYVFtZ2I5dmppbjhBWUdqdENQQUNYMk1iMS1oSmpKQzV6QWRSaHVGdG1CaGh6VlFrOFRVRFVvSE9BZ3lvMWQ1TVl4Tkh6MkFyUXNEOUFucWxTc0h4dS1seHVVQnJ6LWlBN09UOE15Q1RyRGtWSHp4X18zR0xCeTZiNHNNUXBIdl9jRnZEc0pSRXBQaC1nUFRRTjlGb1N1MHFuT3cK
    kind: Secret
    metadata:
      creationTimestamp: null
      name: cloud-config
      namespace: kube-system
kind: ConfigMap
metadata:
  name: harvester-csi-driver-addon
  namespace: example-rke2
---
apiVersion: v1
data:
  calico-helm-config.yaml: |
    apiVersion: helm.cattle.io/v1
    kind: HelmChartConfig
    metadata:
      name: rke2-calico
      namespace: kube-system
    spec:
      valuesContent: |-
        installation:
          controlPlaneTolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: Exists
              effect: NoSchedule
            - key: "node-role.kubernetes.io/etcd"
              operator: Exists
              effect: NoExecute
            - key: "node.cloudprovider.kubernetes.io/uninitialized"
              operator: Equal
              value: "true"
              effect: NoSchedule
kind: ConfigMap
metadata:
  name: calico-helm-config
  namespace: example-rke2
